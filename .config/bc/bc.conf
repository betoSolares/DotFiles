/* Configuration for bc */

scale = 4

/* Constants */
aperys_constant = 1.20205690315959428539
atmospheric_presurre = 100325
avogadro_number = 6.02214129 * 10^23
baker_constant = 0.83564884826472105333 
bernstein_constant = 0.28016949902386913303
blonch_landau_constant = 0.54325896534297670695
boltzmann_constant = 1.3806488 * 10^-23
buffon_constant = 0.63661977236758134307
cahen_constant = 0.64341054628833802618
connectivity_constant = 1.84775906502257351225
catalan_constant = 0.91596559417721901505
coulomb_constant = 8.987551787 * 10^9
dottie_number = 0.73908513321516064165
elementary_charge = 1.602176565 * 10^-19
erdos_borwein_constant = 1.60669515241529176378
euler_gompertz_constant = 0.59634736232319407434
euler_mascheroni_constant = 0.57721566490153286060
euler_number = 2.71828182845904523536
feigenbaum_constant = 4.66920160910299067185
feller_tornier_constant = 0.66131704946962233528
gauss_constant = 0.83462684167407318628
gelfond_constant = 23.1406926327792690057
gelfond_scheider_constant = 2.66514414269022518865
gieseking_constant = 1.01494160640965362502
golden_ratio = 1.61803398874989484820
golomb_dickman_constant = 0.62432998854355087099
gravitation = 6.67384 * 10^-11
h_bar = 1.054571726 * 10^-34
hafner_sarnak_mccurley_constant = 0.60792710185402662866
hermite_ramanujan_constant = 262537412640768743.999999999999250073 
ideal_gas_constant = 8.3144621
john_constant = 4.81047738096535165547
kasner_number = 1.75793275661800453270
khinchin_constant = 2.68545200106530644530
laplace_limit = 0.66274341934918158097
lemniscate_constant = 2.62205755429211981046
light_speed = 299792458
liouville_number = 0.110001000000000000000001
lochs_constant = 0.97027011439203392574
meissel_mertens_constant = 0.26149721284764278375
nielsen_ramanujan = 0.82246703342411321823
nivien_constant = 1.70521114010536776428
pi = 3.1415926535897932384626433832795028841968
planck = 6.62606957 * 10^-34
plastic_number = 1.32471795724474602596
porter_constant = 1.46707807943397547289
ramanujan_soldner_constant = 1.45136923488338105028
rest_mass_electron = 9.10938294 * 10^-31
rest_mass_proton = 1.672621777 * 10^-27
robbins_constant = 0.66170718226717623515
sierpinski_constant = 2.58498175957925321706
stefan_boltzmann_constant = 5.670373 * 10^-8
totient_constant = 1.94359643682075920505
universal_parabolic_constant = 2.29558714939263807403
vacuum_permeability = 1.256637061 * 10^-6
vacuum_permittivity = 8.854187817 * 10^-12
wallis_constant = 2.09455148154232659148
weierstrass_constant = 0.47494937998792065033

/* Constant Message */
define constants() {
	print "\nList of constants: This are all the constant saved."
	print "\n      aperys_constant"
	print "\n      atmospheric_presurre"
	print "\n      avogadro_number"
	print "\n      baker_constant"
	print "\n      bernstein_constant"
	print "\n      blonch_landau_constant"
	print "\n      boltzmann_constant"
	print "\n      buffon_constant"
	print "\n      cahen_constant"
	print "\n      connectivity_constant"
	print "\n      catalan_constant"
	print "\n      coulomb_constant"
	print "\n      dottie_number"
	print "\n      elementary_charge"
	print "\n      erdos_borwein_constant"
	print "\n      euler_gompertz_constant"
	print "\n      euler_mascheroni_constant"
	print "\n      euler_number"
	print "\n      feigenbaum_constant"
	print "\n      feller_tornier_constant"
	print "\n      gauss_constant"
	print "\n      gelfond_constant"
	print "\n      gelfond_scheider_constant"
	print "\n      gieseking_constant"
	print "\n      golden_ratio"
	print "\n      golomb_dickman_constant"
	print "\n      gravitation"
	print "\n      h_bar"
	print "\n      hafner_sarnak_mccurley_constant"
	print "\n      hermite_ramanujan_constant"
	print "\n      ideal_gas_constant"
	print "\n      john_constant"
	print "\n      kasner_number"
	print "\n      khinchin_constant"
	print "\n      laplace_limit"
	print "\n      lemniscate_constant"
	print "\n      light_speed"
	print "\n      liouville_number"
	print "\n      lochs_constant"
	print "\n      meissel_mertens_constant"
	print "\n      nielsen_ramanujan"
	print "\n      nivien_constant"
	print "\n      pi"
	print "\n      planck"
	print "\n      plastic_number"
	print "\n      porter_constant"
	print "\n      ramanujan_soldner_constant"
	print "\n      rest_mass_electron"
	print "\n      rest_mass_proton"
	print "\n      robbins_constant"
	print "\n      sierpinski_constant"
	print "\n      stefan_boltzmann_constant"
	print "\n      totient_constant"
	print "\n      universal_parabolic_constant"
	print "\n      vacuum_permeability"
	print "\n      vacuum_permittivity"
	print "\n      wallis_constant"
	print "\n      weierstrass_constant"
	print "\n"
	return l(0);
}

/* Factorial of x */
define fact(x) {
	if (x < 0) {
		print "The number can't be less than 0\n"
		return null;
	} else {
		if ((x == 0) || (x == 1)) {
			return 1;
		} else {
			return x * fac(x - 1);
		}
	}
}

/* Permutation of r object from n object */
define npr(n, r) {
	return fact(n) / fact(n - r);
} 

define permutation(n, r) {
	return fact(n) / fact(n - r);
} 

/* Combination of r object from n object */
define ncr(n, r) {
	return fact(n) / (fact(r) * fact(n - r));
} 

define combination(n, r) {
	return fact(n) / (fact(r) * fact(n - r));
} 

/* n root of a number x */
define root(x, n) {
	return e(l(x)/n);
}

/* N power to x */
define pow(n, x) {
	return n ^ x;
}

/* Logarithm of any base of a number */
define log(x, b) {
	return l(x) /l(b);
}

/* Natural logarithm */
define ln(x) {
	return l(x);
}

/* Exponential */
define exp(x) {
	return e(x);
}

/* Sine of x */
define sin(x) {
	return s(x);
}

/* Cosine of x */
define cos(x) {
	return c(x);
}

/* Tangent of x */
define tan(x) {
	return s(x) / c(x);
}

/* Cosecant of x */
define csc(x) {
	return 1 / s(x);
}

/* Secant of x */
define sec(x) {
	return 1 / c(x);
}

/* Cotangent of x */
define cot(x) {
	return c(x) / s(x);
}

/* Arc sine of x */
define arcsin(x) {
	return a(x / sqrt(1 - x^2));
}

/* Arc cosine of x */
define arccos(x) {
	return a(sqrt(1 - x^2) / x);
}

/* Arc tangent of x */
define arctan(x) {
	return a(x);
}

/* Arc cosecant of x */
define arccsc(x) {
	return a(1 / sqrt((x^2) - 1));
}

/* Arc secant of x */
define arcsec(x) {
	return a(sqrt((x^2) - 1));
}

/* Arc cotangetn of x */
define arccot(x) {
	return pi/2 - a(x);
}

/* Bessel function */
define bessel(n, x) {
	return j(n, x);
}

/* List of fuctions to use */
define functions() {
	print "\nList of functions: This are all the functions."
	print "\n      fact(x): Factorial of x, x can't be less than 0."
	print "\n      npr(x): Permutation of r objects from n objects."
	print "\n      permutation(x): Permutation of r objects from n objects."
	print "\n      ncr(x): Combination of r objects from n objects."
	print "\n      combination(x): Combination of r objects from n objects."
	print "\n      sqrt(x): Square root of a number x."
	print "\n      root(x, n): Nth root of a number x."
	print "\n      n ^ x: N power to x."
	print "\n      pow(n, x): N power to x."
	print "\n      log(x, b): Logarithm of a number x of base b."
	print "\n      ln(x): Natural logarithm of a number x."
	print "\n      exp(x): Exponential of a number x."
	print "\n      sin(x): Sine of x (in radians)."
	print "\n      cos(x): Cosine of x (in radians)."
	print "\n      tan(x): Tangent of x (in radians)."
	print "\n      csc(x): Cosecant of x (in radians)."
	print "\n      sec(x): Secant of x (in radians)."
	print "\n      cot(x): Cotangent of x (in radians)."
	print "\n      arcsin(x): Sine invers of x (return in radians)."
	print "\n      arccos(x): Cosine invers of x (return in radians)."
	print "\n      arctan(x): Tangent invers of x (return in radians)."
	print "\n      arccsc(x): Cosecant invers of x (return in radians)."
	print "\n      arcsec(x): Secant invers of x (return in radians)."
	print "\n      arccot(x): Cotangent invers of x (return in radians)."
	print "\n      bessel(n, x): Bessel function of number order n of x."
	print "\n"
	return l(0);
}
